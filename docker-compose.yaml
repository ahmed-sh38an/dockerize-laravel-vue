version: "3.8"

networks:
  lognetwork:
    driver: bridge

services:
  server:
    image: "nginx:stable-alpine"
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - lognetwork
  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
      - ./src:/var/www/html/storage/logs
      - ./src:/var/www/html/storage/framework/sessions
      - ./src:/var/www/html/storage/framework/views
      - ./src:/var/www/html/storage/framework/cache
    networks:
      - lognetwork
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env
    networks:
      - lognetwork
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
  # artisan:
  #   build:
  #     context: ./dockerfiles
  #     dockerfile: php.dockerfile
  #   volumes:
  #     - ./src:/var/www/html:delegated
  #     - ./src:/var/www/html/storage/logs
  #     - ./src:/var/www/html/storage/framework/sessions
  #     - ./src:/var/www/html/storage/framework/views
  #     - ./src:/var/www/html/storage/framework/cache
  #     - ./src:/var/www/html
  #   entrypoint: ["php", "/var/www/html/artisan", "serve"]
  #   networks:
  #     - lognetwork
  #   depends_on:
  #     - mysql
  npm:
    image: node:14
    working_dir: /var/www/html/frontend
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html/frontend
    command: "npm run dev"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8090:80"
    volumes:
      - ./nginx/vue.conf:/etc/nginx/conf.d/default.conf
